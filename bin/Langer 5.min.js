class LANGUAJE5{constructor({functions=!0,markdown=!0,autosave=!1}={}){let self=this;this.stor=!1,this.name=this.constructor.name,this.color="color:#FFC107",this.route=void 0,this.allow={functions:functions,markdown:markdown,autosave:autosave},this.config={CACHE:{},lang:""},this.functions={mi(a){return`<i class="material-icon">${a}</i>`},lang(a){let b=self.config.CACHE[self.config.lang][a];return"this"==a&&(b=self.config.lang),b??"(undefined)"},mat(operation){let valid=operation.match(/(\d|\s|[+*/-])+/gim);return null==valid?"invalid operation.":eval(valid[0])},var(variable){let result,Var=variable.match(/\w+((.\w+\]?)*)/gim)[0];return null!=Var&&null==Var.slice(0,1).match(/[0-9]/gim)&&(result=eval(Var)),result}},localStorage.getItem(`${this.name}`)!=null&&!0==this.allow.autosave&&(this.config.lang=JSON.parse(localStorage.getItem(`${this.name}`)))}async get(a){let b=this,c=!1;return null==this.route?(console.error(`${this.name} Error: \n you need to set a path to get the json files \n use LANGUAJE.setRoute()`),!1):(null==b.config.CACHE[a]?await fetch(`${this.route}${a}.json`).then(a=>a.json()).then(d=>{b.config.CACHE[a]=d,b.config.lang=a,localStorage.setItem(`${this.name}`,JSON.stringify(b.config.lang)),c=b.config.CACHE[a]}).catch(()=>{console.error(`${this.name} Error: \nan error occurred, could not get the json files`),c=!1}):(b.config.lang=a,localStorage.setItem(`${this.name}`,JSON.stringify(b.config.lang)),c=b.config.CACHE[a]),c)}motor(a){let b=a;return b=b.replace(/(\w+)\((.*?)\)/gim,(a,b,c)=>this.functions[b]?(c.__proto__.float=()=>parseFloat(data),c.__proto__.int=()=>parseInt(data),c.__proto__.json=()=>JSON.parse(data),this.functions[b](c)):a),b}markdown(a){if(!0==this.allow.markdown){let b=(a,b)=>`<${a}>${b}</${a}>`;a=a.replace(/(\*\*)([^*]+)(\*\*)/gims,(a,c,d)=>b("strong",d)),a=a.replace(/(\*)([^*]+)(\*)/gims,(a,c,d)=>b("em",d)),a=a.replace(/(~~)([^~]+)(~~)/gims,(a,c,d)=>b("del",d))}return a}async set(a){!0==this.allow.autosave&&!1==this.stor&&(this.stor=!0,""!=this.config.lang&&(a=this.config.lang));let b=await this.get(a);!1!=b&&setTimeout(()=>{document.querySelectorAll("lang").forEach(c=>{if(c.lenguaje!=null&&c.lenguaje==a)return!1;let d=c.innerHTML;c.target==null&&(c.target=d),c.lenguaje=a;let e=b[c.target]??"(undefined)";c.innerHTML=this.markdown(e?!0==this.allow.functions&&c.getAttribute("noFunctions")==null?this.motor(e):e:"")})},0)}Update(){this.set(this.config.lang)}setFunction(...a){a.forEach(a=>{this.functions[a.name]=a})}setRoute(a){this.route=a}}