/*
    Langer 6.2 DEBUG version
    LICENCE MIT DouglasAndresÂ©2020
===========================================================>
*/
class LANGUAJE6{constructor({functions=!0,markdown=!0,autosave=!1,defaultText="(undefined)"}={}){let self=this;this.stor=!1,this.color="color:#FFC107",this.route=void 0,this.allow={functions:functions,markdown:markdown,autosave:autosave},this.config={CACHE:{},lang:"",lastLang:{},defaultText:defaultText},this.functions={lang(a){let b=self.config.CACHE[self.config.lang][a];return"this"==a&&(b=self.config.lang),b??self.config.defaultText},var(variable){let result,Var=variable.match(/\w+((.\w+\]?)*)/gim)[0];return null!=Var&&null==Var.slice(0,1).match(/[0-9]/gim)&&(result=eval(Var)),result}},localStorage.getItem("LANGUAJE6")!=null&&!0==this.allow.autosave&&(this.config.lang=JSON.parse(localStorage.getItem("LANGUAJE6")));let style=document.createElement("style");style.innerHTML=`lang {display: none;}lang[use]{display: block;}`,document.head.appendChild(style)}async get(a){let b=this,c=!1;if(null==this.route)return console.error(`"LANGUAJE6" Error: \n you need to set a path to get the json files \n use LANGUAJE.setRoute()`),!1;if(null==b.config.CACHE[a]){let d=Date.now();await fetch(`${this.route}${a}.json`).then(a=>a.json()).then(e=>{b.config.CACHE[a]=e,b.config.lang=a,localStorage.setItem("LANGUAJE6",JSON.stringify(b.config.lang));let f=Date.now();console.log(`%c"LANGUAJE6" Debug:\nfiles were obtained in ${f-d}ms`,this.color),c=b.config.CACHE[a]}).catch(()=>{console.error(`"LANGUAJE6" Error: \nan error occurred, could not get the json files`),c=!1})}else b.config.lang=a,localStorage.setItem("LANGUAJE6",JSON.stringify(b.config.lang)),console.log(`%c"LANGUAJE6" Debug:\nContent loaded from local cache.`,this.color),c=b.config.CACHE[a];return c}FunctionsMotor(a,b){if(!0!=this.allow.functions||null==b.getAttribute("noFunctions"))return a;let c=a;return c=c.replace(/(\w+)\((.*?)\)/gim,(a,b,c)=>this.functions[b]?this.functions[b](c):a),c}markdown3(a){if(!0==this.allow.markdown){let b=(a,b)=>`<${a}>${b}</${a}>`;a=a.replace(/((\*\*|\_\_))(.*?)(\1)/gims,(a,c,d,e)=>b("strong",e)),a=a.replace(/((\*|\_))(.*?)(\1)/gims,(a,c,d,e)=>b("em",e)),a=a.replace(/(~~)(.*?)(~~)/gims,(a,c,d)=>b("del",d)),a=a.replace(/(`)(.*?)(`)/gims,(a,c,d)=>b("code",d))}return a}getKey(a=""){if("string"==typeof a)return this.config.lastLang[a.trim()]?.replace(/</g,"&lt;").replace(/>/g,"&gt;")??this.config.defaultText}PlaceholdersMotor(a,b){return a.replace(/%([A-Z_0-9\-]+)%/gim,(a,c)=>{if(["class","style","id"].includes(c))return a;if(null!=b.getAttribute(c)){let a=b.getAttribute(c);return a}return a})}Motor(a,b){let c=this.getKey(a);return c=this.PlaceholdersMotor(c,b),c=this.FunctionsMotor(c,b),c=this.markdown3(c),c}async set(a=""){if(null==a||null==a||!1==["string","object"].includes(typeof a)||!0==Array.isArray(a))return console.error(`"LANGUAJE6" Error:\n LANGUAJE.set() can only receive a string or an object as a parameter.`),!1;!0==this.allow.autosave&&!1==this.stor&&(this.stor=!0,""!=this.config.lang&&(a=this.config.lang));let b;"string"==typeof a&&a==this.config.lang?(console.log(`%c"LANGUAJE6" Debug:\n Same language selected, elements will updated.`,this.color),b=this.config.lastLang):b="object"==typeof a?a:await this.get(a),!1!=b&&(this.config.lastLang=b),setTimeout(()=>{document.querySelectorAll("lang").forEach(b=>{b.setAttribute("use","");let c=b.target??b.innerHTML;b.target==null&&(b.target=c),b.lenguaje=a,b.innerHTML=this.Motor(c,b)})},0)}Update(){this.set(this.config.lastLang)}setFunction(...a){a.forEach(a=>{this.functions[a.name]=a})}setRoute(a){"string"==typeof a?this.route=a:console.error(`"LANGUAJE6" Error:\n LANGUAJE.setRout() can only receive a string as a parameter.`)}}